"use strict";(self.webpackChunkexample=self.webpackChunkexample||[]).push([[729],{4919:function(n,a,e){e.r(a),e.d(a,{default:function(){return N}});var t=e(9916),s=e(3696);function o(n){const a=Object.assign({h1:"h1",a:"a",span:"span",img:"img",h2:"h2",p:"p",ol:"ol",li:"li",strong:"strong",h3:"h3",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",ul:"ul",hr:"hr"},(0,t.RP)(),n.components);return s.createElement(s.Fragment,null,s.createElement(a.h1,{id:"lorambo-fighting-lora-memory-bottlenecks-through-optimized-rank-selection-"},s.createElement(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#lorambo-fighting-lora-memory-bottlenecks-through-optimized-rank-selection-"},s.createElement(a.span,{className:"icon icon-link"})),"LoRAMBo: Fighting LoRA Memory Bottlenecks Through Optimized Rank Selection 🧠"),"\n",s.createElement(a.a,{href:"https://arxiv.org/abs/2024.xxxxx",target:"_blank",rel:"nofollow"},s.createElement(a.img,{src:"https://img.shields.io/badge/arXiv-2024.xxxxx-b31b1b.svg",alt:"arXiv"})),"\n","\n","\n",s.createElement(a.a,{href:"https://opensource.org/licenses/MIT",target:"_blank",rel:"nofollow"},s.createElement(a.img,{src:"https://img.shields.io/badge/License-MIT-yellow.svg",alt:"License: MIT"})),"\n","\n","\n",s.createElement(a.a,{href:"https://www.python.org/downloads/",target:"_blank",rel:"nofollow"},s.createElement(a.img,{src:"https://img.shields.io/badge/python-3.8+-blue.svg",alt:"Python 3.8+"})),"\n",s.createElement(a.h2,{id:"introduction-"},s.createElement(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#introduction-"},s.createElement(a.span,{className:"icon icon-link"})),"Introduction 🎯"),"\n",s.createElement(a.p,null,"Low-Rank Adaptation (LoRA) has emerged as a powerful technique for efficient fine-tuning of large language models. However, determining the optimal allocation of low-rank parameters across model layers remains a significant challenge. This research presents a comprehensive theoretical framework for optimizing rank selection in LoRA, leading to improved memory efficiency without compromising model performance."),"\n",s.createElement(a.h2,{id:"key-innovations-"},s.createElement(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#key-innovations-"},s.createElement(a.span,{className:"icon icon-link"})),"Key Innovations 💡"),"\n",s.createElement(a.p,null,"Our work unifies multiple theoretical perspectives to create a robust framework for LoRA rank selection:"),"\n",s.createElement(a.ol,null,"\n",s.createElement(a.li,null,"\n",s.createElement(a.p,null,s.createElement(a.strong,null,"Classical Matrix Approximation"),": We leverage the Eckart-Young-Mirsky theorem to establish fundamental error bounds for low-rank approximations."),"\n"),"\n",s.createElement(a.li,null,"\n",s.createElement(a.p,null,s.createElement(a.strong,null,"Curvature-Aware Allocation"),': We introduce Hessian-based sensitivity measures to ground "layer importance" in second-order optimization theory.'),"\n"),"\n",s.createElement(a.li,null,"\n",s.createElement(a.p,null,s.createElement(a.strong,null,"Data-Dependent Optimization"),": Novel data-weighted norms provide tighter approximation bounds when the data manifold resides in a low-rank subspace."),"\n"),"\n",s.createElement(a.li,null,"\n",s.createElement(a.p,null,s.createElement(a.strong,null,"Adaptive Online Algorithm"),": We develop an iterative rank-allocation strategy with proven near-optimality guarantees."),"\n"),"\n"),"\n",s.createElement(a.h2,{id:"theoretical-framework-"},s.createElement(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#theoretical-framework-"},s.createElement(a.span,{className:"icon icon-link"})),"Theoretical Framework 📚"),"\n",s.createElement(a.h3,{id:"matrix-approximation-foundations"},s.createElement(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#matrix-approximation-foundations"},s.createElement(a.span,{className:"icon icon-link"})),"Matrix Approximation Foundations"),"\n",s.createElement(a.p,null,"At the core of LoRA lies the weight update equation:"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="python"><pre class="language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">lora_update</span><span class="token punctuation">(</span>W<span class="token punctuation">,</span> A<span class="token punctuation">,</span> B<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token triple-quoted-string string">"""\n    W: Original weight matrix (d × k)\n    A: Low-rank factor (d × r)\n    B: Low-rank factor (r × k)\n    r: Rank of the update (r &lt;&lt; min(d,k))\n    """</span>\n    <span class="token keyword">return</span> W <span class="token operator">+</span> torch<span class="token punctuation">.</span>matmul<span class="token punctuation">(</span>A<span class="token punctuation">,</span> B<span class="token punctuation">)</span></code></pre></div>'}}),"\n",s.createElement(a.p,null,"The optimal rank allocation follows our derived formula:"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="python"><pre class="language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">optimal_rank_allocation</span><span class="token punctuation">(</span>layer_sensitivity<span class="token punctuation">,</span> dim_d<span class="token punctuation">,</span> dim_k<span class="token punctuation">,</span> total_budget<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token triple-quoted-string string">"""Calculate optimal rank for each layer based on sensitivity and dimensions"""</span>\n    r_i <span class="token operator">=</span> <span class="token punctuation">(</span>total_budget <span class="token operator">/</span> L<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>\n        <span class="token punctuation">(</span>layer_sensitivity<span class="token operator">**</span><span class="token number">0.5</span> <span class="token operator">*</span> <span class="token punctuation">(</span>dim_d <span class="token operator">+</span> dim_k<span class="token punctuation">)</span><span class="token operator">**</span><span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">)</span> <span class="token operator">/</span> \n        <span class="token builtin">sum</span><span class="token punctuation">(</span>s<span class="token operator">**</span><span class="token number">0.5</span> <span class="token operator">*</span> <span class="token punctuation">(</span>d <span class="token operator">+</span> k<span class="token punctuation">)</span><span class="token operator">**</span><span class="token operator">-</span><span class="token number">0.5</span> <span class="token keyword">for</span> s<span class="token punctuation">,</span> d<span class="token punctuation">,</span> k <span class="token keyword">in</span> layer_params<span class="token punctuation">)</span>\n    <span class="token punctuation">)</span>\n    <span class="token keyword">return</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span>r_i<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",s.createElement(a.h3,{id:"hessian-based-sensitivity-analysis"},s.createElement(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#hessian-based-sensitivity-analysis"},s.createElement(a.span,{className:"icon icon-link"})),"Hessian-Based Sensitivity Analysis"),"\n",s.createElement(a.p,null,"We compute layer sensitivity using Hessian approximations:"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="python"><pre class="language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">compute_hessian_sensitivity</span><span class="token punctuation">(</span>layer<span class="token punctuation">,</span> data_batch<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token triple-quoted-string string">"""Estimate layer sensitivity via Hessian trace approximation"""</span>\n    <span class="token keyword">def</span> <span class="token function">hvp</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># Hessian-vector product</span>\n        grad <span class="token operator">=</span> torch<span class="token punctuation">.</span>autograd<span class="token punctuation">.</span>grad<span class="token punctuation">(</span>loss<span class="token punctuation">,</span> layer<span class="token punctuation">.</span>parameters<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> create_graph<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>\n        <span class="token keyword">return</span> torch<span class="token punctuation">.</span>autograd<span class="token punctuation">.</span>grad<span class="token punctuation">(</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">(</span>g <span class="token operator">*</span> v<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">for</span> g <span class="token keyword">in</span> grad<span class="token punctuation">)</span><span class="token punctuation">,</span> \n                                 layer<span class="token punctuation">.</span>parameters<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    \n    <span class="token comment"># Power iteration to approximate largest eigenvalue</span>\n    v <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn_like<span class="token punctuation">(</span>layer<span class="token punctuation">.</span>weight<span class="token punctuation">)</span>\n    <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>num_power_iterations<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        v <span class="token operator">=</span> hvp<span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>\n        v <span class="token operator">=</span> v <span class="token operator">/</span> v<span class="token punctuation">.</span>norm<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    \n    <span class="token keyword">return</span> v<span class="token punctuation">.</span>norm<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># Approximates Tr(H) or ||H||_op</span></code></pre></div>'}}),"\n",s.createElement(a.h2,{id:"implementation-details-"},s.createElement(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#implementation-details-"},s.createElement(a.span,{className:"icon icon-link"})),"Implementation Details 🔧"),"\n",s.createElement(a.h3,{id:"online-rank-allocation-algorithm"},s.createElement(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#online-rank-allocation-algorithm"},s.createElement(a.span,{className:"icon icon-link"})),"Online Rank Allocation Algorithm"),"\n",s.createElement(a.p,null,"Our adaptive rank selection process:"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="python"><pre class="language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">LoRAMBoOptimizer</span><span class="token punctuation">:</span>\n    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> model<span class="token punctuation">,</span> total_budget<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        self<span class="token punctuation">.</span>model <span class="token operator">=</span> model\n        self<span class="token punctuation">.</span>budget <span class="token operator">=</span> total_budget\n        self<span class="token punctuation">.</span>current_ranks <span class="token operator">=</span> <span class="token punctuation">{</span>l<span class="token punctuation">:</span> <span class="token number">0</span> <span class="token keyword">for</span> l <span class="token keyword">in</span> model<span class="token punctuation">.</span>layers<span class="token punctuation">}</span>\n    \n    <span class="token keyword">def</span> <span class="token function">update_ranks</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> loss_improvement_threshold<span class="token operator">=</span><span class="token number">1e-4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n        <span class="token triple-quoted-string string">"""Iteratively allocate ranks to layers with highest benefit"""</span>\n        <span class="token keyword">while</span> self<span class="token punctuation">.</span>used_budget <span class="token operator">&lt;</span> self<span class="token punctuation">.</span>budget<span class="token punctuation">:</span>\n            benefits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n            <span class="token keyword">for</span> layer <span class="token keyword">in</span> self<span class="token punctuation">.</span>model<span class="token punctuation">.</span>layers<span class="token punctuation">:</span>\n                <span class="token keyword">if</span> self<span class="token punctuation">.</span>can_increment_rank<span class="token punctuation">(</span>layer<span class="token punctuation">)</span><span class="token punctuation">:</span>\n                    delta <span class="token operator">=</span> self<span class="token punctuation">.</span>estimate_improvement<span class="token punctuation">(</span>layer<span class="token punctuation">)</span>\n                    benefits<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">(</span>delta<span class="token punctuation">,</span> layer<span class="token punctuation">)</span><span class="token punctuation">)</span>\n            \n            <span class="token keyword">if</span> <span class="token keyword">not</span> benefits <span class="token keyword">or</span> <span class="token builtin">max</span><span class="token punctuation">(</span>b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">for</span> b <span class="token keyword">in</span> benefits<span class="token punctuation">)</span> <span class="token operator">&lt;</span> loss_improvement_threshold<span class="token punctuation">:</span>\n                <span class="token keyword">break</span>\n                \n            best_layer <span class="token operator">=</span> <span class="token builtin">max</span><span class="token punctuation">(</span>benefits<span class="token punctuation">,</span> key<span class="token operator">=</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>\n            self<span class="token punctuation">.</span>increment_rank<span class="token punctuation">(</span>best_layer<span class="token punctuation">)</span></code></pre></div>'}}),"\n",s.createElement(a.h3,{id:"efficient-memory-management"},s.createElement(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#efficient-memory-management"},s.createElement(a.span,{className:"icon icon-link"})),"Efficient Memory Management"),"\n",s.createElement(a.p,null,"Key techniques for reducing memory overhead:"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="python"><pre class="language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">create_efficient_lora_layer</span><span class="token punctuation">(</span>base_layer<span class="token punctuation">,</span> rank<span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token triple-quoted-string string">"""Creates memory-efficient LoRA layer with dynamic scaling"""</span>\n    lora_A <span class="token operator">=</span> nn<span class="token punctuation">.</span>Parameter<span class="token punctuation">(</span>torch<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>base_layer<span class="token punctuation">.</span>in_features<span class="token punctuation">,</span> rank<span class="token punctuation">)</span><span class="token punctuation">)</span>\n    lora_B <span class="token operator">=</span> nn<span class="token punctuation">.</span>Parameter<span class="token punctuation">(</span>torch<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>rank<span class="token punctuation">,</span> base_layer<span class="token punctuation">.</span>out_features<span class="token punctuation">)</span><span class="token punctuation">)</span>\n    \n    <span class="token comment"># Initialize using scaled random normal initialization</span>\n    nn<span class="token punctuation">.</span>init<span class="token punctuation">.</span>normal_<span class="token punctuation">(</span>lora_A<span class="token punctuation">,</span> std<span class="token operator">=</span><span class="token number">1.0</span> <span class="token operator">/</span> rank<span class="token punctuation">)</span>\n    nn<span class="token punctuation">.</span>init<span class="token punctuation">.</span>zeros_<span class="token punctuation">(</span>lora_B<span class="token punctuation">)</span>\n    \n    scaling <span class="token operator">=</span> alpha <span class="token operator">/</span> rank\n    \n    <span class="token keyword">return</span> nn<span class="token punctuation">.</span>Sequential<span class="token punctuation">(</span>\n        base_layer<span class="token punctuation">,</span>\n        <span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x <span class="token operator">+</span> scaling <span class="token operator">*</span> <span class="token punctuation">(</span>x @ lora_A @ lora_B<span class="token punctuation">)</span>\n    <span class="token punctuation">)</span></code></pre></div>'}}),"\n",s.createElement(a.h2,{id:"experimental-results-"},s.createElement(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#experimental-results-"},s.createElement(a.span,{className:"icon icon-link"})),"Experimental Results 📊"),"\n",s.createElement(a.p,null,"Our approach demonstrates significant improvements across various tasks:"),"\n",s.createElement(a.h3,{id:"glue-benchmark-performance"},s.createElement(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#glue-benchmark-performance"},s.createElement(a.span,{className:"icon icon-link"})),"GLUE Benchmark Performance"),"\n",s.createElement(a.table,null,s.createElement(a.thead,null,s.createElement(a.tr,null,s.createElement(a.th,null,"Model"),s.createElement(a.th,null,"Task"),s.createElement(a.th,null,"Accuracy"),s.createElement(a.th,null,"Memory (MB)"))),s.createElement(a.tbody,null,s.createElement(a.tr,null,s.createElement(a.td,null,"RoBERTa-base + Uniform LoRA"),s.createElement(a.td,null,"QNLI"),s.createElement(a.td,null,"89.32"),s.createElement(a.td,null,"5.58")),s.createElement(a.tr,null,s.createElement(a.td,null,"RoBERTa-base + LoRAMBo"),s.createElement(a.td,null,"QNLI"),s.createElement(a.td,null,"89.45"),s.createElement(a.td,null,"6.21")),s.createElement(a.tr,null,s.createElement(a.td,null,"T5-base + Uniform LoRA"),s.createElement(a.td,null,"SST-2"),s.createElement(a.td,null,"90.82"),s.createElement(a.td,null,"7.74")),s.createElement(a.tr,null,s.createElement(a.td,null,"T5-base + LoRAMBo"),s.createElement(a.td,null,"SST-2"),s.createElement(a.td,null,"92.58"),s.createElement(a.td,null,"8.41")))),"\n",s.createElement(a.h3,{id:"wikitext-103-results"},s.createElement(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#wikitext-103-results"},s.createElement(a.span,{className:"icon icon-link"})),"WikiText-103 Results"),"\n",s.createElement(a.table,null,s.createElement(a.thead,null,s.createElement(a.tr,null,s.createElement(a.th,null,"Method"),s.createElement(a.th,null,"Pmax=12M PPL"),s.createElement(a.th,null,"Pmax=24M PPL"))),s.createElement(a.tbody,null,s.createElement(a.tr,null,s.createElement(a.td,null,"Uniform LoRA"),s.createElement(a.td,null,"26.4"),s.createElement(a.td,null,"25.1")),s.createElement(a.tr,null,s.createElement(a.td,null,"LoRAMBo"),s.createElement(a.td,null,"24.9"),s.createElement(a.td,null,"23.8")))),"\n",s.createElement(a.h2,{id:"using-lorambo-"},s.createElement(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#using-lorambo-"},s.createElement(a.span,{className:"icon icon-link"})),"Using LoRAMBo 🚀"),"\n",s.createElement(a.h3,{id:"installation"},s.createElement(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#installation"},s.createElement(a.span,{className:"icon icon-link"})),"Installation"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="bash"><pre class="language-bash"><code class="language-bash">pip <span class="token function">install</span> lorambo</code></pre></div>'}}),"\n",s.createElement(a.h3,{id:"basic-usage"},s.createElement(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#basic-usage"},s.createElement(a.span,{className:"icon icon-link"})),"Basic Usage"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="python"><pre class="language-python"><code class="language-python"><span class="token keyword">from</span> lorambo <span class="token keyword">import</span> LoRAMBoOptimizer<span class="token punctuation">,</span> configure_model\n\n<span class="token comment"># Initialize with your pre-trained model</span>\nmodel <span class="token operator">=</span> AutoModelForSequenceClassification<span class="token punctuation">.</span>from_pretrained<span class="token punctuation">(</span><span class="token string">\'roberta-base\'</span><span class="token punctuation">)</span>\nlorambo <span class="token operator">=</span> LoRAMBoOptimizer<span class="token punctuation">(</span>\n    model<span class="token operator">=</span>model<span class="token punctuation">,</span>\n    total_budget<span class="token operator">=</span><span class="token number">1000000</span><span class="token punctuation">,</span>  <span class="token comment"># Total parameter budget</span>\n    sensitivity_method<span class="token operator">=</span><span class="token string">\'hessian\'</span>  <span class="token comment"># or \'gradient\' or \'data\'</span>\n<span class="token punctuation">)</span>\n\n<span class="token comment"># Configure model with optimal rank allocation</span>\nmodel <span class="token operator">=</span> configure_model<span class="token punctuation">(</span>model<span class="token punctuation">,</span> lorambo<span class="token punctuation">.</span>compute_optimal_ranks<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",s.createElement(a.h2,{id:"contributing-"},s.createElement(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#contributing-"},s.createElement(a.span,{className:"icon icon-link"})),"Contributing 🤝"),"\n",s.createElement(a.p,null,"We welcome contributions! Please read our ",s.createElement(a.a,{href:"CONTRIBUTING.md"},"Contributing Guidelines")," before submitting pull requests."),"\n",s.createElement(a.h2,{id:"citation-"},s.createElement(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#citation-"},s.createElement(a.span,{className:"icon icon-link"})),"Citation 📚"),"\n",s.createElement(a.p,null,"If you use LoRAMBo in your research, please cite:"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="bibtex"><pre class="language-bibtex"><code class="language-bibtex">@article{cawley2024lorambo,\n  title={LoRAMBo: Fighting LoRA Memory Bottlenecks With Optimized Rank Selection},\n  author={Cawley, Liam},\n  journal={arXiv preprint arXiv:2024.xxxxx},\n  year={2024}\n}</code></pre></div>'}}),"\n",s.createElement(a.h2,{id:"license-"},s.createElement(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#license-"},s.createElement(a.span,{className:"icon icon-link"})),"License 📄"),"\n",s.createElement(a.p,null,"This project is licensed under the MIT License - see the ",s.createElement(a.a,{href:"LICENSE"},"LICENSE")," file for details."),"\n",s.createElement(a.h2,{id:"acknowledgments-"},s.createElement(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#acknowledgments-"},s.createElement(a.span,{className:"icon icon-link"})),"Acknowledgments 👏"),"\n",s.createElement(a.p,null,"We thank the University of Michigan's College of Engineering for computational resources and the Mathematics DRP groups for their valuable feedback."),"\n",s.createElement(a.h2,{id:"contact-"},s.createElement(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#contact-"},s.createElement(a.span,{className:"icon icon-link"})),"Contact 📫"),"\n",s.createElement(a.ul,null,"\n",s.createElement(a.li,null,"Author: Liam Cawley"),"\n",s.createElement(a.li,null,"Email: ",s.createElement(a.a,{href:"mailto:cawleyl@umich.edu"},"cawleyl@umich.edu")),"\n",s.createElement(a.li,null,"Project Link: ",s.createElement(a.a,{href:"https://github.com/username/lorambo",target:"_blank",rel:"nofollow"},"https://github.com/username/lorambo")),"\n"),"\n",s.createElement(a.hr),"\n",s.createElement(a.p,null,"Built with ❤️ at the University of Michigan"))}var l=function(n){void 0===n&&(n={});const{wrapper:a}=Object.assign({},(0,t.RP)(),n.components);return a?s.createElement(a,n,s.createElement(o,n)):o(n)},p=e(8192),c=e(6324),r=e(2689),i=e.n(r),u=e(4279),m=e(7009),k=e(9743),d=e(4456),h=e(1656),g=e(9299),E=e(6596),y=e(7878),f=e(8687),b=e.n(f),w=e(6062),v=e.n(w),_=e(7091),x=e(1814),A=e(218),I=e(9258),L=e(9869),M=e(7908),T=e(9157);function R(n){let{data:{mdx:a},children:e}=n;const{fields:{slug:{html:t,nonce:o,htmlEncrypted:l,title:r,excerpt:f,path:w,date:R,commit:N,type:B}},frontmatter:{cover:S},tableOfContents:C}=a,P=i().unix(N).format("MMM Do YYYY"),O=M.A.formatDate(R),z=S?(0,c.c)(S):null,H=(0,L.Q6)(),U=M.A.generateFullUrl(H,w);console.log(o);const{0:W,1:q}=(0,s.useState)({locked:""!==o,failed:!1,html:t}),[F,j]=s.useState(!1),[D,G]=s.useState(""),Y=()=>{j(!F)},X=n=>{G(n)},J=()=>{if(W.locked)try{const n=v().decodeUTF8(D),a=v().decodeBase64(o),e=b().hash(n).slice(0,b().secretbox.keyLength),t=v().decodeBase64(l),s=b().secretbox.open(t,a,e),p=v().encodeUTF8(s);q({locked:!1,failed:!1,html:p})}catch(n){q({locked:!0,failed:!0,html:""})}},Q=[];O&&Q.push(`Posted: ${O}`),N>0&&O!==P&&Q.push(`Edited: ${P}`);const K=(0,s.useContext)(I.Ay),$=(0,p.useLocation)();(0,s.useEffect)((()=>{K&&K.setState&&Object.getOwnPropertyNames(C).length&&K.setState({tableOfContents:C,pathname:$.pathname})}),[]);const V=()=>W.locked?s.createElement(u.A,{description:""},s.createElement(m.A,{fluid:!0},s.createElement(k.A,{justify:"center",type:"flex"},s.createElement(d.A,{xs:24,sm:24,md:24,lg:16,xl:12},W.failed?s.createElement(h.A,{type:"error"},"Wrong password! Please try again."):s.createElement(h.A,{type:"info"},"This article is encrypted by xsalsa20-poly1305 algorithm."),s.createElement(g.A,{style:{marginTop:"1rem"}},s.createElement(E.A,{type:F?"text":"password",value:D,placeholder:"Enter password to unlock this article.",onPressEnter:J,onChange:X,size:"lg"}),s.createElement(g.A.Button,{onClick:Y},F?s.createElement(T.A,{icon:"eye"}):s.createElement(T.A,{icon:"eye-slash"}))))))):s.createElement("article",{className:"markdown-body"},e),Z=()=>s.createElement("article",{className:"markdown-body"},e);return s.createElement(s.Fragment,null,s.createElement(A.A,{title:r,description:f,path:w,keywords:["FullStack developer","Javascript","ReactJS","NodeJS","Gatsby","technology"]}),s.createElement("div",null,s.createElement("div",{className:"marginTopTitle"},s.createElement("h1",{className:"titleSeparate"},r)),s.createElement("div",{style:{color:"var(--rs-text-tertiary)",marginBottom:"1rem"}},Q.join(", ")),s.createElement(y.A,{style:{marginBottom:"1rem"}},s.createElement(y.A.Item,{as:d.A,xs:24,sm:24,md:z?12:24,lg:z?16:24},s.createElement(_.A,{title:"Abstract",style:{height:"100%"}},s.createElement("p",{style:{marginBottom:"0"},dangerouslySetInnerHTML:{__html:M.A.parseMarkDown(f,!0)}}))),z?s.createElement(y.A.Item,{as:d.A,xs:24,sm:24,md:12,lg:8},s.createElement("div",{style:{height:"100%"}},s.createElement(c.G,{image:z,title:r,alt:r}))):null),""===o?s.createElement(Z):s.createElement(V)),"posts"===B?s.createElement("div",{style:{marginTop:"2rem"}},s.createElement(x.A,{pageCanonicalUrl:U,pageId:r})):null)}function N(n){return s.createElement(R,n,s.createElement(l,n))}}}]);
//# sourceMappingURL=component---gatsby-theme-academic-src-templates-post-post-jsx-content-file-path-content-research-lorambo-index-md-ff44e281f14a3792a937.js.map